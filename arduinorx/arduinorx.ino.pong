/*
 * SPI pins:
 * D9: CE
 * D10: CSN
 * D11: MOSI
 * D12: MISO
 * D13: SCK
 * 
 */

int serial_putc( char c, FILE * ) 
{
  Serial.write( c );

  return c;
} 

void printf_begin(void)
{
  fdevopen( &serial_putc, 0 );
}

#include <SPI.h>
#include <RF24.h>

#define RF_CE 4
#define RF_CSN 7
RF24Debug radio(RF_CE, RF_CSN);
const uint64_t pipes[2] = { 0xe7e7e7e7e7LL, 0xc2c2c2c2c2LL };

struct sensor_struct{
  int sensor_id;
  float temp;
  float soil_temp;
  float humid;
  float pres;
};

void setup() {
  Serial.begin(115200);
  printf_begin();
  radio.begin();
  radio.setPALevel(RF24_PA_LOW);
  radio.openWritingPipe(pipes[1]);    // note that our pipes are the same above, but that
  radio.openReadingPipe(1, pipes[0]); // they are flipped between rx and tx sides.
  radio.startListening();
  radio.printDetails();
}

void loop() {
  if (radio.available()) {

    Serial.println("--------------------------------------------------------------------------------");
    uint8_t rx_data[32];  // we'll receive a 32 byte packet
    
    bool done = false;
    while (!done) {
      done = radio.read( &rx_data, sizeof(rx_data) );
      printf("Got payload @ %lu...\r\n", millis());
    }
    
    // echo it back real fast
    radio.stopListening();
    radio.write( &rx_data, sizeof(rx_data) );
    Serial.println("Sent response.");
    radio.startListening();

    // do stuff with the data we got.
    Serial.print("First Value: ");
    Serial.println(rx_data[0]);
    
  }  
}


// https://gist.github.com/bryanthompson/ef4ecf24ad36410f077b 
